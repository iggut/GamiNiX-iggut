scanner {
	file("/proc/stat") {
		CpuCountTotal = Regex("^cpu([0-9]+)", Last)
		CpuUserTotal = RegEx("^cpu [\t ]*([0-9]+)",Sum)
		CpuNiceTotal = RegEx("^cpu [\t ]*[0-9]+ ([0-9]+)",Sum)
		CpuSystemTotal = RegEx("^cpu [\t ]*[0-9]+ [0-9]+ ([0-9]+)",Sum)
		CpuIdleTotal = RegEx("^cpu [\t ]*[0-9]+ [0-9]+ [0-9]+ ([0-9]+)",Sum)
	}

}

define CpuCount = (CpuCountTotal.count)
# TODO: these cry for figuring out how to use functions
define CpuUser = (CpuUserTotal - CpuUserTotal.pval)
define CpuNice = (CpuNiceTotal - CpuNiceTotal.pval)
define CpuSystem = (CpuSystemTotal - CpuSystemTotal.pval)
define CpuIdle = (CpuIdleTotal - CpuIdleTotal.pval)

define CpuTotal = (CpuUser + CpuNice + CpuSystem + CpuIdle)
define CpuUsage = ((CpuTotal - CpuIdle) / CpuTotal)
layout {

	chart {
		style = "cpu"
		interval = 2000
		value = CpuUsage
	
		tooltip = "<tt><b>CPU</b>\n" + Str(CpuUsage * 100, 2) + "% All " + Str(CpuCount, 0) + " core usage</tt>"
	}
	action = "htop"
}

#CSS

chart {
  background-color: transparent;
  color: yellow;
  min-width: 40px;
  min-height: 16px;
  margin-top: 3px;
  margin-bottom: 3px;
  padding: 4px;
  border-radius: 6px;
  border: 1px solid rgba(119,119,119,0.2);
}

chart#cpu {
	color: blue;
	color: #42b2b2;
}
